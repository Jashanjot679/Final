{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jashankaur/Desktop/FinalWMDD49999/people-boats-boilerplate-antd/client/src/components/forms/UpdateBoat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { Form, Input, Button } from \"antd\";\nimport { UPDATE_BOAT } from \"../../queries\";\n\nconst UpdateBoat = props => {\n  _s();\n\n  const [id] = useState(props.id);\n  const [year, setYear] = useState(props.year);\n  const [make, setmake] = useState(props.make);\n  const [model, setModel] = useState(props.model);\n  const [price, setPrice] = useState(props.price);\n  const [personId, setPersonId] = useState(props.personId);\n  const [form] = Form.useForm();\n  const [, forceUpdate] = useState();\n  useEffect(() => {\n    forceUpdate({});\n  }, []);\n\n  const onFinish = values => {\n    const {\n      year,\n      model,\n      make,\n      price,\n      personId\n    } = values;\n    updatePerson({\n      variables: {\n        id,\n        year,\n        make,\n        model,\n        price,\n        personId\n      },\n      optimisticResponse: {\n        __typename: \"Mutation\",\n        updateBoat: {\n          __typename: \"Boat\",\n          id,\n          year,\n          make,\n          model,\n          price,\n          personId\n        }\n      }\n    });\n    props.onButtonClick();\n  };\n\n  const updateStateVariable = (variable, value) => {\n    switch (variable) {\n      case \"year\":\n        props.updateStateVariable(\"year\", value);\n        setYear(value);\n        break;\n\n      case \"model\":\n        props.updateStateVariable(\"model\", value);\n        setModel(value);\n        break;\n\n      case \"make\":\n        props.updateStateVariable(\"make\", value);\n        setMake(value);\n        break;\n\n      case \"price\":\n        props.updateStateVariable(\"price\", value);\n        setPrice(value);\n        break;\n\n      case \"personId\":\n        props.updateStateVariable(\"personId\", value);\n        setPersonId(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    form: form,\n    name: \"update-person-form\",\n    layout: \"inline\",\n    onFinish: onFinish,\n    initialValues: {\n      firstName: firstName,\n      lastName: lastName\n    },\n    size: \"large\",\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"year\",\n      label: \"Year\",\n      rules: [{\n        required: true,\n        message: \"Please input year\"\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"i.e. 2010\",\n        onChange: e => updateStateVariable(\"year\", e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"model\",\n      label: \"Model\",\n      rules: [{\n        required: true,\n        message: \"Please input model!\"\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"i.e. 20W34\",\n        onChange: e => updateStateVariable(\"model\", e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"make\",\n      label: \"Make\",\n      rules: [{\n        required: true,\n        message: \"Please input make\"\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"i.e. Yamin\",\n        onChange: e => updateStateVariable(\"make\", e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"price\",\n      label: \"Price\",\n      rules: [{\n        required: true,\n        message: \"Please input price!\"\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"i.e. 20000\",\n        onChange: e => updateStateVariable(\"price\", e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"personId\",\n      label: \"personId\",\n      rules: [{\n        required: true,\n        message: \"Please input personId!\"\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"i.e. 1\",\n        onChange: e => updateStateVariable(\"personId\", e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      shouldUpdate: true,\n      children: () => /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        disabled: !form.isFieldTouched(\"year\") && !form.isFieldTouched(\"model\") && !form.isFieldTouched(\"make\") && !form.isFieldTouched(\"price\") && !form.isFieldTouched(\"personId\") || form.getFieldsError().filter(({\n          errors\n        }) => errors.length).length,\n        children: \"Update Person\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: props.onButtonClick,\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpdateBoat, \"aWlV0mC+ZFyaC6HtpEty7MIfkcg=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = UpdateBoat;\nexport default UpdateBoat;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateBoat\");","map":{"version":3,"sources":["/Users/jashankaur/Desktop/FinalWMDD49999/people-boats-boilerplate-antd/client/src/components/forms/UpdateBoat.js"],"names":["React","useEffect","useState","useMutation","Form","Input","Button","UPDATE_BOAT","UpdateBoat","props","id","year","setYear","make","setmake","model","setModel","price","setPrice","personId","setPersonId","form","useForm","forceUpdate","onFinish","values","updatePerson","variables","optimisticResponse","__typename","updateBoat","onButtonClick","updateStateVariable","variable","value","setMake","firstName","lastName","required","message","e","target","isFieldTouched","getFieldsError","filter","errors","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { Form, Input, Button } from \"antd\";\nimport { UPDATE_BOAT } from \"../../queries\";\n\nconst UpdateBoat = (props) => {\n  const [id] = useState(props.id);\n  const [year, setYear] = useState(props.year);\n  const [make, setmake] = useState(props.make);\n  const [model, setModel] = useState(props.model);\n  const [price, setPrice] = useState(props.price);\n  const [personId, setPersonId] = useState(props.personId);\n\n  const [form] = Form.useForm();\n  const [, forceUpdate] = useState();\n\n  useEffect(() => {\n    forceUpdate({});\n  }, []);\n\n  const onFinish = (values) => {\n    const { year, model, make, price, personId } = values;\n    updatePerson({\n      variables: {\n        id,\n        year,\n        make,\n        model,\n        price,\n        personId,\n      },\n      optimisticResponse: {\n        __typename: \"Mutation\",\n        updateBoat: {\n          __typename: \"Boat\",\n          id,\n          year,\n          make,\n          model,\n          price,\n          personId,\n        },\n      },\n    });\n    props.onButtonClick();\n  };\n\n  const updateStateVariable = (variable, value) => {\n    switch (variable) {\n      case \"year\":\n        props.updateStateVariable(\"year\", value);\n        setYear(value);\n        break;\n      case \"model\":\n        props.updateStateVariable(\"model\", value);\n        setModel(value);\n        break;\n      case \"make\":\n        props.updateStateVariable(\"make\", value);\n        setMake(value);\n        break;\n      case \"price\":\n        props.updateStateVariable(\"price\", value);\n        setPrice(value);\n        break;\n      case \"personId\":\n        props.updateStateVariable(\"personId\", value);\n        setPersonId(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <Form\n      form={form}\n      name=\"update-person-form\"\n      layout=\"inline\"\n      onFinish={onFinish}\n      initialValues={{\n        firstName: firstName,\n        lastName: lastName,\n      }}\n      size=\"large\"\n    >\n      <Form.Item\n        name=\"year\"\n        label=\"Year\"\n        rules={[{ required: true, message: \"Please input year\" }]}\n      >\n        <Input\n          placeholder=\"i.e. 2010\"\n          onChange={(e) => updateStateVariable(\"year\", e.target.value)}\n        />\n      </Form.Item>\n      <Form.Item\n        name=\"model\"\n        label=\"Model\"\n        rules={[{ required: true, message: \"Please input model!\" }]}\n      >\n        <Input\n          placeholder=\"i.e. 20W34\"\n          onChange={(e) => updateStateVariable(\"model\", e.target.value)}\n        />\n      </Form.Item>\n\n      <Form.Item\n        name=\"make\"\n        label=\"Make\"\n        rules={[{ required: true, message: \"Please input make\" }]}\n      >\n        <Input\n          placeholder=\"i.e. Yamin\"\n          onChange={(e) => updateStateVariable(\"make\", e.target.value)}\n        />\n      </Form.Item>\n      <Form.Item\n        name=\"price\"\n        label=\"Price\"\n        rules={[{ required: true, message: \"Please input price!\" }]}\n      >\n        <Input\n          placeholder=\"i.e. 20000\"\n          onChange={(e) => updateStateVariable(\"price\", e.target.value)}\n        />\n      </Form.Item>\n      <Form.Item\n        name=\"personId\"\n        label=\"personId\"\n        rules={[{ required: true, message: \"Please input personId!\" }]}\n      >\n        <Input\n          placeholder=\"i.e. 1\"\n          onChange={(e) => updateStateVariable(\"personId\", e.target.value)}\n        />\n      </Form.Item>\n      <Form.Item shouldUpdate={true}>\n        {() => (\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            disabled={\n              (!form.isFieldTouched(\"year\") &&\n                !form.isFieldTouched(\"model\") &&\n                !form.isFieldTouched(\"make\") &&\n                !form.isFieldTouched(\"price\") &&\n                !form.isFieldTouched(\"personId\")) ||\n              form.getFieldsError().filter(({ errors }) => errors.length).length\n            }\n          >\n            Update Person\n          </Button>\n        )}\n      </Form.Item>\n      <Button onClick={props.onButtonClick}>Cancel</Button>\n    </Form>\n  );\n};\n\nexport default UpdateBoat;\n"]},"metadata":{},"sourceType":"module"}